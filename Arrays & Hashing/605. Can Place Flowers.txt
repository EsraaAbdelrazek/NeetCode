class Solution {
public:
    bool canPlaceFlowers(vector<int>& flowerbed, int n) {
        if (flowerbed.size()== 1){
            if ((flowerbed[0] == 0 && n ==0) || (flowerbed[0] == 0 && n ==1) || (flowerbed[0] == 1&& n ==0))        return true ;
            else return false ; 
        }
        int count =0 ; 
        for (int i = 0  ; i < flowerbed.size()   ; i++){
            if (i == 0) {
                if (flowerbed[i+1] == 0 && flowerbed[i] == 0 ){ 
                    count++ ;
                    cout << "count 1   " ; 
                    flowerbed[i] = 1 ; 
                    } 
            
            }else if (i == (flowerbed.size()-1)){
                if(flowerbed[i-1] == 0 && flowerbed[i] == 0 ){ 
                    count++ ; 
                     cout << "count 2   " ; 
                     flowerbed[i] = 1 ; 
                
                }
            }else {
                if (flowerbed[i-1] == 0 && flowerbed[i+1] == 0 && flowerbed[i] == 0) {
                    count++  ;
                     cout << "count 3   "<< i<<"   " ; 
                     flowerbed[i] = 1 ; 
                }
            }

        }  cout << count ; 
        if(n <= count) return true ; 
        return false ; 
    }
};